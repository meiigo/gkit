{{$svrType := .ServiceType}}

// Code generated by protoc-gen-go-http. DO NOT EDIT.
// versions:
// protoc-gen-go-http v1.0.0
// source: {{.SourceFilePath}}

package {{.PackageName}}

import (
    "context"
    "github.com/gin-gonic/gin"
)

var _ = new(context.Context)

type {{.ServiceType}}HTTPServer interface {
{{- range .MethodSets}}
	{{.Name}}(context.Context, *{{.Request}}) (*{{.Reply}}, error)
{{- end}}
}

func Register{{.ServiceType}}HTTPHandler(g *gin.Engine, srv {{.ServiceType}}HTTPServer) {
	{{- range .Methods}}
	g.{{.Method}}("{{.Path}}", _{{$svrType}}_{{.Name}}{{.Num}}_HTTP_Handler(srv))
	{{- end}}
}

{{range .Methods}}
func _{{$svrType}}_{{.Name}}{{.Num}}_HTTP_Handler(srv {{$svrType}}HTTPServer) func(c *gin.Context) {
	return func(c *gin.Context) {
        ctx := c.Request.Context()
		var in {{.Request}}
		if err := c.ShouldBind(&in); err != nil {
            c.AbortWithStatusJSON(400, gin.H{"err": err.Error()})
            return
		}

        // execute
        out, err := srv.{{.Name}}(ctx, &in)
        if err != nil {
            c.AbortWithStatusJSON(500, gin.H{"err": err.Error()})
            return
        }
		c.JSON(200, out)
	}
}
{{end}}
